{"version":3,"file":"index-BBXCv0tY.js","sources":["../../../../pages/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"!loaded\" class=\"loading\">Loading...</div>\r\n    <div v-else class=\"__migrated-html\" v-html=\"bodyHtml\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, ref, nextTick } from 'vue'\r\n\r\nconst bodyHtml = ref<string>('')\r\nconst loaded = ref(false)\r\n\r\nfunction hidePreloader() {\r\n  try {\r\n    const pre = document.getElementById('preloader')\r\n    if (pre) {\r\n      pre.style.display = 'none'\r\n      pre.remove?.()\r\n    }\r\n    // Also ensure any overlay with class 'loading-body' is hidden\r\n    const loadingBody = document.querySelector('.loading-body') as HTMLElement | null\r\n    if (loadingBody) {\r\n      loadingBody.classList.add('d-none')\r\n      loadingBody.style.display = 'none'\r\n    }\r\n    // Restore scroll if any style blocked it\r\n    document.documentElement.style.overflow = ''\r\n    document.body.style.overflow = ''\r\n  } catch (err) {\r\n    // noop\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  try {\r\n    // Fetch the original static HTML that we placed in /public/original.html\r\n    const res = await fetch('/original.html', { cache: 'no-store' })\r\n    const html = await res.text()\r\n    // Extract the content inside <body>...</body>\r\n    const match = html.match(/<body[^>]*>([\\s\\S]*?)<\\/body>/i)\r\n    bodyHtml.value = match ? match[1] : html\r\n  } catch (e) {\r\n    console.error('Failed to load original HTML', e)\r\n    bodyHtml.value = '<p>Gagal memuat konten.</p>'\r\n  } finally {\r\n    loaded.value = true\r\n    await nextTick()\r\n    // Try hide immediately, then fallback by timeout in case late rendering\r\n    hidePreloader()\r\n    setTimeout(hidePreloader, 300)\r\n    setTimeout(hidePreloader, 1500)\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n.loading { padding: 2rem; text-align: center; }\r\n.__migrated-html { min-height: 100vh; }\r\n</style>\r\n"],"names":[],"mappings":";;;;;;AAUA,UAAM,WAAW,IAAY,EAAE;AAC/B,UAAM,SAAS,IAAI,KAAK;;;WATR,OAAA,OAAM;;;8CAC0B,SAAA,SAAQ,EAAA,QAAA;AAAA;;;;;;;;;;;"}