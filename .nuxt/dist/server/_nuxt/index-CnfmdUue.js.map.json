{"file":"index-CnfmdUue.js","mappings":";;;;;;AAUA,UAAM,WAAW,IAAY,EAAE;AAC/B,UAAM,SAAS,IAAI,KAAK;;;WATR,OAAA,OAAM;;;4DACwC,SAAA,SAAQ,EAAA,QAAA;AAAA;;;;;;;;;;;","names":[],"sources":["../../../../pages/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-if=\"!loaded\" class=\"loading\">Loading...</div>\n    <div v-else id=\"page-top\" class=\"__migrated-html\" v-html=\"bodyHtml\"></div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, ref, nextTick } from \"vue\";\n\nconst bodyHtml = ref<string>(\"\");\nconst loaded = ref(false);\nlet scriptsExecuted = false;\n\nfunction hidePreloader() {\n  try {\n    const pre = document.getElementById(\"preloader\");\n    if (pre) {\n      pre.style.display = \"none\";\n      pre.remove?.();\n    }\n    // Also ensure any overlay with class 'loading-body' is hidden\n    const loadingBody = document.querySelector(\n      \".loading-body\",\n    ) as HTMLElement | null;\n    if (loadingBody) {\n      loadingBody.classList.add(\"d-none\");\n      loadingBody.style.display = \"none\";\n    }\n    // Restore scroll if any style blocked it\n    document.documentElement.style.overflow = \"\";\n    document.body.style.overflow = \"\";\n  } catch (err) {\n    // noop\n  }\n}\n\nfunction executeScriptsFromMigratedHtml() {\n  if (scriptsExecuted) return;\n  try {\n    const container = document.querySelector(\"div.__migrated-html\");\n    if (!container) return;\n    const scripts = Array.from(\n      container.querySelectorAll(\"script\"),\n    ) as HTMLScriptElement[];\n\n    // Build a set of existing external script URLs to avoid duplicates\n    const existingScripts = Array.from(document.querySelectorAll(\"script[src]\")) as HTMLScriptElement[];\n    const existingSrcSet = new Set(\n      existingScripts\n        .map((s) => {\n          try {\n            return new URL(s.src, window.location.href).href;\n          } catch {\n            return s.src;\n          }\n        })\n        .filter(Boolean),\n    );\n\n    scripts.forEach((oldScript) => {\n      // Skip inline scripts that try to initialize duplicated header/menu/offcanvas from legacy HTML\n      if (!oldScript.src) {\n        const txt = oldScript.textContent || \"\";\n        const skipPatterns = [\n          \"custom-navigation\",\n          \"top-icon-marquee\",\n          \"offcanvas\",\n          \"sideDrawer\",\n          \"sticky-top\",\n        ];\n        if (skipPatterns.some((p) => txt.includes(p))) {\n          return; // do not execute legacy header/menu initializers\n        }\n      }\n\n      const newScript = document.createElement(\"script\");\n      // copy attributes\n      for (const { name, value } of Array.from(oldScript.attributes)) {\n        newScript.setAttribute(name, value);\n      }\n      if (oldScript.src) {\n        // external script â€” skip if already present\n        let normalized = oldScript.src;\n        try {\n          normalized = new URL(oldScript.src, window.location.href).href;\n        } catch {\n          // ignore\n        }\n        if (existingSrcSet.has(normalized)) {\n          return; // already loaded\n        }\n        newScript.src = oldScript.src;\n        newScript.defer = true;\n        existingSrcSet.add(normalized);\n      } else {\n        // inline script\n        newScript.text = oldScript.textContent || \"\";\n      }\n      // Append to body so it executes\n      document.body.appendChild(newScript);\n    });\n    scriptsExecuted = true;\n  } catch (e) {\n    console.warn(\"Failed to execute scripts from migrated HTML\", e);\n  }\n}\n\nonMounted(async () => {\n  try {\n    // Fetch the original static HTML that we placed in /public/original.html\n    const res = await fetch(\"/original.html\", { cache: \"no-store\" });\n    const html = await res.text();\n    // Extract the content inside <body>...</body>\n    const match = html.match(/<body[^>]*>([\\s\\S]*?)<\\/body>/i);\n    const rawBody = match ? match[1] : html;\n\n    // Sanitize: remove header/menu/marquee sections to avoid duplication with our layout\n    const temp = document.createElement(\"div\");\n    temp.innerHTML = rawBody;\n\n    // Selectors to remove: adjust to cover original header variants\n    const selectorsToRemove = [\n      \".top-icon-marquee\", // running text banner\n      \"nav.custom-navigation\", // desktop nav\n      \".sticky-top\", // any sticky header wrapper\n      \"header\", // generic header tag\n      \"#sideDrawer\", // mobile offcanvas menu\n      \".offcanvas\", // any offcanvas that may contain menu clone\n      \"[x-data*='liveChatOpen']\", // remove bottom floating chat/menu widget\n      \"#whatsapp-widget\", // remove floating WhatsApp widget (requires missing CSS otherwise)\n      \"[class*='tw-fixed'][class*='tw-bottom-0'][class*='tw-right-']\", // generic bottom-fixed control group\n    ];\n\n    try {\n      selectorsToRemove.forEach((sel) => {\n        temp.querySelectorAll(sel).forEach((el) => el.remove());\n      });\n    } catch (_) {\n      // ignore any selector errors so we don't break rendering\n    }\n\n    bodyHtml.value = temp.innerHTML;\n  } catch (e) {\n    console.error(\"Failed to load original HTML\", e);\n    bodyHtml.value = \"<p>Gagal memuat konten.</p>\";\n  } finally {\n    loaded.value = true;\n    await nextTick();\n    // Execute any scripts that were part of the original body (Bootstrap, Swiper, inline init, etc.)\n    executeScriptsFromMigratedHtml();\n    // Try hide immediately, then fallback by timeout in case late rendering\n    hidePreloader();\n    setTimeout(() => {\n      executeScriptsFromMigratedHtml();\n      hidePreloader();\n    }, 300);\n    setTimeout(() => {\n      executeScriptsFromMigratedHtml();\n      hidePreloader();\n    }, 1500);\n  }\n});\n</script>\n\n<style>\n.loading {\n  padding: 2rem;\n  text-align: center;\n}\n.__migrated-html {\n  min-height: 100vh;\n  overflow-x: hidden;\n}\n.__migrated-html img {\n  max-width: 100%;\n  height: auto;\n}\n/* Promo section polish and responsiveness */\n.promo-section {\n  max-width: min(1200px, 95vw);\n  margin-left: auto;\n  margin-right: auto;\n}\n.promo-section .swiper { width: 100%; }\n.promo-section .swiper-pagination { margin-top: 8px; }\n.promo-section .promo-nav-btn { width: 42px; height: 42px; }\n@media (max-width: 576px) {\n  .promo-section { padding-left: .5rem; padding-right: .5rem; }\n  .promo-section .promo-nav-btn { display: none !important; }\n}\n/* Footer spacing and mobile columns */\nfooter.text-primary.fs-6.position-relative { margin-top: 2rem; }\n@media (max-width: 992px) {\n  .col-footer { margin-bottom: 1.25rem; }\n}\n</style>\n"],"version":3}